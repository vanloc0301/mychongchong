//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30128.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace AppraiseMethod {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MarketDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MarketDataSet : global::System.Data.DataSet {
        
        private FM_MARKETHIDECOLUMNDataTable tableFM_MARKETHIDECOLUMN;
        
        private FM_FCMarketComporisonApproachDataTable tableFM_FCMarketComporisonApproach;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MarketDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MarketDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FM_MARKETHIDECOLUMN"] != null)) {
                    base.Tables.Add(new FM_MARKETHIDECOLUMNDataTable(ds.Tables["FM_MARKETHIDECOLUMN"]));
                }
                if ((ds.Tables["FM_FCMarketComporisonApproach"] != null)) {
                    base.Tables.Add(new FM_FCMarketComporisonApproachDataTable(ds.Tables["FM_FCMarketComporisonApproach"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FM_MARKETHIDECOLUMNDataTable FM_MARKETHIDECOLUMN {
            get {
                return this.tableFM_MARKETHIDECOLUMN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FM_FCMarketComporisonApproachDataTable FM_FCMarketComporisonApproach {
            get {
                return this.tableFM_FCMarketComporisonApproach;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MarketDataSet cln = ((MarketDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FM_MARKETHIDECOLUMN"] != null)) {
                    base.Tables.Add(new FM_MARKETHIDECOLUMNDataTable(ds.Tables["FM_MARKETHIDECOLUMN"]));
                }
                if ((ds.Tables["FM_FCMarketComporisonApproach"] != null)) {
                    base.Tables.Add(new FM_FCMarketComporisonApproachDataTable(ds.Tables["FM_FCMarketComporisonApproach"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableFM_MARKETHIDECOLUMN = ((FM_MARKETHIDECOLUMNDataTable)(base.Tables["FM_MARKETHIDECOLUMN"]));
            if ((initTable == true)) {
                if ((this.tableFM_MARKETHIDECOLUMN != null)) {
                    this.tableFM_MARKETHIDECOLUMN.InitVars();
                }
            }
            this.tableFM_FCMarketComporisonApproach = ((FM_FCMarketComporisonApproachDataTable)(base.Tables["FM_FCMarketComporisonApproach"]));
            if ((initTable == true)) {
                if ((this.tableFM_FCMarketComporisonApproach != null)) {
                    this.tableFM_FCMarketComporisonApproach.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MarketDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MarketDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFM_MARKETHIDECOLUMN = new FM_MARKETHIDECOLUMNDataTable();
            base.Tables.Add(this.tableFM_MARKETHIDECOLUMN);
            this.tableFM_FCMarketComporisonApproach = new FM_FCMarketComporisonApproachDataTable();
            base.Tables.Add(this.tableFM_FCMarketComporisonApproach);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFM_MARKETHIDECOLUMN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFM_FCMarketComporisonApproach() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MarketDataSet ds = new MarketDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FM_MARKETHIDECOLUMNRowChangeEventHandler(object sender, FM_MARKETHIDECOLUMNRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FM_FCMarketComporisonApproachRowChangeEventHandler(object sender, FM_FCMarketComporisonApproachRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FM_MARKETHIDECOLUMNDataTable : global::System.Data.TypedTableBase<FM_MARKETHIDECOLUMNRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPROJECT_ID;
            
            private global::System.Data.DataColumn columnHideColumn;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNDataTable() {
                this.TableName = "FM_MARKETHIDECOLUMN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FM_MARKETHIDECOLUMNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FM_MARKETHIDECOLUMNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJECT_IDColumn {
                get {
                    return this.columnPROJECT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HideColumnColumn {
                get {
                    return this.columnHideColumn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNRow this[int index] {
                get {
                    return ((FM_MARKETHIDECOLUMNRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_MARKETHIDECOLUMNRowChangeEventHandler FM_MARKETHIDECOLUMNRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_MARKETHIDECOLUMNRowChangeEventHandler FM_MARKETHIDECOLUMNRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_MARKETHIDECOLUMNRowChangeEventHandler FM_MARKETHIDECOLUMNRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_MARKETHIDECOLUMNRowChangeEventHandler FM_MARKETHIDECOLUMNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFM_MARKETHIDECOLUMNRow(FM_MARKETHIDECOLUMNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNRow AddFM_MARKETHIDECOLUMNRow(System.Guid ID, string PROJECT_ID, string HideColumn) {
                FM_MARKETHIDECOLUMNRow rowFM_MARKETHIDECOLUMNRow = ((FM_MARKETHIDECOLUMNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        PROJECT_ID,
                        HideColumn};
                rowFM_MARKETHIDECOLUMNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFM_MARKETHIDECOLUMNRow);
                return rowFM_MARKETHIDECOLUMNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNRow FindByID(System.Guid ID) {
                return ((FM_MARKETHIDECOLUMNRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FM_MARKETHIDECOLUMNDataTable cln = ((FM_MARKETHIDECOLUMNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FM_MARKETHIDECOLUMNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPROJECT_ID = base.Columns["PROJECT_ID"];
                this.columnHideColumn = base.Columns["HideColumn"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPROJECT_ID = new global::System.Data.DataColumn("PROJECT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_ID);
                this.columnHideColumn = new global::System.Data.DataColumn("HideColumn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHideColumn);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnPROJECT_ID.MaxLength = 200;
                this.columnHideColumn.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNRow NewFM_MARKETHIDECOLUMNRow() {
                return ((FM_MARKETHIDECOLUMNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FM_MARKETHIDECOLUMNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FM_MARKETHIDECOLUMNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FM_MARKETHIDECOLUMNRowChanged != null)) {
                    this.FM_MARKETHIDECOLUMNRowChanged(this, new FM_MARKETHIDECOLUMNRowChangeEvent(((FM_MARKETHIDECOLUMNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FM_MARKETHIDECOLUMNRowChanging != null)) {
                    this.FM_MARKETHIDECOLUMNRowChanging(this, new FM_MARKETHIDECOLUMNRowChangeEvent(((FM_MARKETHIDECOLUMNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FM_MARKETHIDECOLUMNRowDeleted != null)) {
                    this.FM_MARKETHIDECOLUMNRowDeleted(this, new FM_MARKETHIDECOLUMNRowChangeEvent(((FM_MARKETHIDECOLUMNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FM_MARKETHIDECOLUMNRowDeleting != null)) {
                    this.FM_MARKETHIDECOLUMNRowDeleting(this, new FM_MARKETHIDECOLUMNRowChangeEvent(((FM_MARKETHIDECOLUMNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFM_MARKETHIDECOLUMNRow(FM_MARKETHIDECOLUMNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MarketDataSet ds = new MarketDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FM_MARKETHIDECOLUMNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FM_FCMarketComporisonApproachDataTable : global::System.Data.TypedTableBase<FM_FCMarketComporisonApproachRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnPROJECT_ID;
            
            private global::System.Data.DataColumn column比较项目;
            
            private global::System.Data.DataColumn column位置;
            
            private global::System.Data.DataColumn column房地产用途;
            
            private global::System.Data.DataColumn column交易日期;
            
            private global::System.Data.DataColumn column交易情况;
            
            private global::System.Data.DataColumn column交易价格;
            
            private global::System.Data.DataColumn column商服中心距离;
            
            private global::System.Data.DataColumn column道路通达度;
            
            private global::System.Data.DataColumn column供电保证率;
            
            private global::System.Data.DataColumn column供水保证率;
            
            private global::System.Data.DataColumn column排水状况;
            
            private global::System.Data.DataColumn column公园距离;
            
            private global::System.Data.DataColumn column体育场馆距离;
            
            private global::System.Data.DataColumn column中学距离;
            
            private global::System.Data.DataColumn column小学距离;
            
            private global::System.Data.DataColumn column幼儿园距离;
            
            private global::System.Data.DataColumn column治安状况;
            
            private global::System.Data.DataColumn column绿化状况;
            
            private global::System.Data.DataColumn column大气污染;
            
            private global::System.Data.DataColumn column噪声污染;
            
            private global::System.Data.DataColumn column建筑物成新率;
            
            private global::System.Data.DataColumn column建筑结构;
            
            private global::System.Data.DataColumn column建筑面积;
            
            private global::System.Data.DataColumn column朝向;
            
            private global::System.Data.DataColumn column楼型;
            
            private global::System.Data.DataColumn column楼梯;
            
            private global::System.Data.DataColumn column电梯;
            
            private global::System.Data.DataColumn column物业管理状况;
            
            private global::System.Data.DataColumn column装修情况;
            
            private global::System.Data.DataColumn column户型布局;
            
            private global::System.Data.DataColumn column总修正系数;
            
            private global::System.Data.DataColumn column比准价格元平方米;
            
            private global::System.Data.DataColumn column交易日期打分;
            
            private global::System.Data.DataColumn column交易情况打分;
            
            private global::System.Data.DataColumn column商服中心距离打分;
            
            private global::System.Data.DataColumn column道路通达度打分;
            
            private global::System.Data.DataColumn column供电保证率打分;
            
            private global::System.Data.DataColumn column供水保证率打分;
            
            private global::System.Data.DataColumn column排水状况打分;
            
            private global::System.Data.DataColumn column公园距离打分;
            
            private global::System.Data.DataColumn column体育场馆距离打分;
            
            private global::System.Data.DataColumn column中学距离打分;
            
            private global::System.Data.DataColumn column小学距离打分;
            
            private global::System.Data.DataColumn column幼儿园距离打分;
            
            private global::System.Data.DataColumn column治安状况打分;
            
            private global::System.Data.DataColumn column绿化状况打分;
            
            private global::System.Data.DataColumn column大气污染打分;
            
            private global::System.Data.DataColumn column噪声污染打分;
            
            private global::System.Data.DataColumn column建筑物成新率打分;
            
            private global::System.Data.DataColumn column建筑结构打分;
            
            private global::System.Data.DataColumn column建筑面积打分;
            
            private global::System.Data.DataColumn column朝向打分;
            
            private global::System.Data.DataColumn column楼型打分;
            
            private global::System.Data.DataColumn column楼梯打分;
            
            private global::System.Data.DataColumn column电梯打分;
            
            private global::System.Data.DataColumn column物业管理状况打分;
            
            private global::System.Data.DataColumn column装修情况打分;
            
            private global::System.Data.DataColumn column户型布局打分;
            
            private global::System.Data.DataColumn column选中项目;
            
            private global::System.Data.DataColumn column标记;
            
            private global::System.Data.DataColumn column权重;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachDataTable() {
                this.TableName = "FM_FCMarketComporisonApproach";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FM_FCMarketComporisonApproachDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FM_FCMarketComporisonApproachDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROJECT_IDColumn {
                get {
                    return this.columnPROJECT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 比较项目Column {
                get {
                    return this.column比较项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 位置Column {
                get {
                    return this.column位置;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 房地产用途Column {
                get {
                    return this.column房地产用途;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 交易日期Column {
                get {
                    return this.column交易日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 交易情况Column {
                get {
                    return this.column交易情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 交易价格Column {
                get {
                    return this.column交易价格;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商服中心距离Column {
                get {
                    return this.column商服中心距离;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 道路通达度Column {
                get {
                    return this.column道路通达度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 供电保证率Column {
                get {
                    return this.column供电保证率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 供水保证率Column {
                get {
                    return this.column供水保证率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 排水状况Column {
                get {
                    return this.column排水状况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 公园距离Column {
                get {
                    return this.column公园距离;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 体育场馆距离Column {
                get {
                    return this.column体育场馆距离;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 中学距离Column {
                get {
                    return this.column中学距离;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 小学距离Column {
                get {
                    return this.column小学距离;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 幼儿园距离Column {
                get {
                    return this.column幼儿园距离;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 治安状况Column {
                get {
                    return this.column治安状况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 绿化状况Column {
                get {
                    return this.column绿化状况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 大气污染Column {
                get {
                    return this.column大气污染;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 噪声污染Column {
                get {
                    return this.column噪声污染;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 建筑物成新率Column {
                get {
                    return this.column建筑物成新率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 建筑结构Column {
                get {
                    return this.column建筑结构;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 建筑面积Column {
                get {
                    return this.column建筑面积;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 朝向Column {
                get {
                    return this.column朝向;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 楼型Column {
                get {
                    return this.column楼型;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 楼梯Column {
                get {
                    return this.column楼梯;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电梯Column {
                get {
                    return this.column电梯;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 物业管理状况Column {
                get {
                    return this.column物业管理状况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 装修情况Column {
                get {
                    return this.column装修情况;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 户型布局Column {
                get {
                    return this.column户型布局;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 总修正系数Column {
                get {
                    return this.column总修正系数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 比准价格元平方米Column {
                get {
                    return this.column比准价格元平方米;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 交易日期打分Column {
                get {
                    return this.column交易日期打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 交易情况打分Column {
                get {
                    return this.column交易情况打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 商服中心距离打分Column {
                get {
                    return this.column商服中心距离打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 道路通达度打分Column {
                get {
                    return this.column道路通达度打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 供电保证率打分Column {
                get {
                    return this.column供电保证率打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 供水保证率打分Column {
                get {
                    return this.column供水保证率打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 排水状况打分Column {
                get {
                    return this.column排水状况打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 公园距离打分Column {
                get {
                    return this.column公园距离打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 体育场馆距离打分Column {
                get {
                    return this.column体育场馆距离打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 中学距离打分Column {
                get {
                    return this.column中学距离打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 小学距离打分Column {
                get {
                    return this.column小学距离打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 幼儿园距离打分Column {
                get {
                    return this.column幼儿园距离打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 治安状况打分Column {
                get {
                    return this.column治安状况打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 绿化状况打分Column {
                get {
                    return this.column绿化状况打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 大气污染打分Column {
                get {
                    return this.column大气污染打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 噪声污染打分Column {
                get {
                    return this.column噪声污染打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 建筑物成新率打分Column {
                get {
                    return this.column建筑物成新率打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 建筑结构打分Column {
                get {
                    return this.column建筑结构打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 建筑面积打分Column {
                get {
                    return this.column建筑面积打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 朝向打分Column {
                get {
                    return this.column朝向打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 楼型打分Column {
                get {
                    return this.column楼型打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 楼梯打分Column {
                get {
                    return this.column楼梯打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 电梯打分Column {
                get {
                    return this.column电梯打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 物业管理状况打分Column {
                get {
                    return this.column物业管理状况打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 装修情况打分Column {
                get {
                    return this.column装修情况打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 户型布局打分Column {
                get {
                    return this.column户型布局打分;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 选中项目Column {
                get {
                    return this.column选中项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 标记Column {
                get {
                    return this.column标记;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn 权重Column {
                get {
                    return this.column权重;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachRow this[int index] {
                get {
                    return ((FM_FCMarketComporisonApproachRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_FCMarketComporisonApproachRowChangeEventHandler FM_FCMarketComporisonApproachRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_FCMarketComporisonApproachRowChangeEventHandler FM_FCMarketComporisonApproachRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_FCMarketComporisonApproachRowChangeEventHandler FM_FCMarketComporisonApproachRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FM_FCMarketComporisonApproachRowChangeEventHandler FM_FCMarketComporisonApproachRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFM_FCMarketComporisonApproachRow(FM_FCMarketComporisonApproachRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachRow AddFM_FCMarketComporisonApproachRow(
                        System.Guid ID, 
                        string PROJECT_ID, 
                        string 比较项目, 
                        string 位置, 
                        string 房地产用途, 
                        System.DateTime 交易日期, 
                        string 交易情况, 
                        double 交易价格, 
                        string 商服中心距离, 
                        string 道路通达度, 
                        string 供电保证率, 
                        string 供水保证率, 
                        string 排水状况, 
                        string 公园距离, 
                        string 体育场馆距离, 
                        string 中学距离, 
                        string 小学距离, 
                        string 幼儿园距离, 
                        string 治安状况, 
                        string 绿化状况, 
                        string 大气污染, 
                        string 噪声污染, 
                        string 建筑物成新率, 
                        string 建筑结构, 
                        string 建筑面积, 
                        string 朝向, 
                        string 楼型, 
                        string 楼梯, 
                        string 电梯, 
                        string 物业管理状况, 
                        string 装修情况, 
                        string 户型布局, 
                        double 总修正系数, 
                        double 比准价格元平方米, 
                        double 交易日期打分, 
                        double 交易情况打分, 
                        double 商服中心距离打分, 
                        double 道路通达度打分, 
                        double 供电保证率打分, 
                        double 供水保证率打分, 
                        double 排水状况打分, 
                        double 公园距离打分, 
                        double 体育场馆距离打分, 
                        double 中学距离打分, 
                        double 小学距离打分, 
                        double 幼儿园距离打分, 
                        double 治安状况打分, 
                        double 绿化状况打分, 
                        double 大气污染打分, 
                        double 噪声污染打分, 
                        double 建筑物成新率打分, 
                        double 建筑结构打分, 
                        double 建筑面积打分, 
                        double 朝向打分, 
                        double 楼型打分, 
                        double 楼梯打分, 
                        double 电梯打分, 
                        double 物业管理状况打分, 
                        double 装修情况打分, 
                        double 户型布局打分, 
                        bool 选中项目, 
                        byte[] 标记, 
                        double 权重) {
                FM_FCMarketComporisonApproachRow rowFM_FCMarketComporisonApproachRow = ((FM_FCMarketComporisonApproachRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        PROJECT_ID,
                        比较项目,
                        位置,
                        房地产用途,
                        交易日期,
                        交易情况,
                        交易价格,
                        商服中心距离,
                        道路通达度,
                        供电保证率,
                        供水保证率,
                        排水状况,
                        公园距离,
                        体育场馆距离,
                        中学距离,
                        小学距离,
                        幼儿园距离,
                        治安状况,
                        绿化状况,
                        大气污染,
                        噪声污染,
                        建筑物成新率,
                        建筑结构,
                        建筑面积,
                        朝向,
                        楼型,
                        楼梯,
                        电梯,
                        物业管理状况,
                        装修情况,
                        户型布局,
                        总修正系数,
                        比准价格元平方米,
                        交易日期打分,
                        交易情况打分,
                        商服中心距离打分,
                        道路通达度打分,
                        供电保证率打分,
                        供水保证率打分,
                        排水状况打分,
                        公园距离打分,
                        体育场馆距离打分,
                        中学距离打分,
                        小学距离打分,
                        幼儿园距离打分,
                        治安状况打分,
                        绿化状况打分,
                        大气污染打分,
                        噪声污染打分,
                        建筑物成新率打分,
                        建筑结构打分,
                        建筑面积打分,
                        朝向打分,
                        楼型打分,
                        楼梯打分,
                        电梯打分,
                        物业管理状况打分,
                        装修情况打分,
                        户型布局打分,
                        选中项目,
                        标记,
                        权重};
                rowFM_FCMarketComporisonApproachRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFM_FCMarketComporisonApproachRow);
                return rowFM_FCMarketComporisonApproachRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachRow FindByID(System.Guid ID) {
                return ((FM_FCMarketComporisonApproachRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FM_FCMarketComporisonApproachDataTable cln = ((FM_FCMarketComporisonApproachDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FM_FCMarketComporisonApproachDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnPROJECT_ID = base.Columns["PROJECT_ID"];
                this.column比较项目 = base.Columns["比较项目"];
                this.column位置 = base.Columns["位置"];
                this.column房地产用途 = base.Columns["房地产用途"];
                this.column交易日期 = base.Columns["交易日期"];
                this.column交易情况 = base.Columns["交易情况"];
                this.column交易价格 = base.Columns["交易价格"];
                this.column商服中心距离 = base.Columns["商服中心距离"];
                this.column道路通达度 = base.Columns["道路通达度"];
                this.column供电保证率 = base.Columns["供电保证率"];
                this.column供水保证率 = base.Columns["供水保证率"];
                this.column排水状况 = base.Columns["排水状况"];
                this.column公园距离 = base.Columns["公园距离"];
                this.column体育场馆距离 = base.Columns["体育场馆距离"];
                this.column中学距离 = base.Columns["中学距离"];
                this.column小学距离 = base.Columns["小学距离"];
                this.column幼儿园距离 = base.Columns["幼儿园距离"];
                this.column治安状况 = base.Columns["治安状况"];
                this.column绿化状况 = base.Columns["绿化状况"];
                this.column大气污染 = base.Columns["大气污染"];
                this.column噪声污染 = base.Columns["噪声污染"];
                this.column建筑物成新率 = base.Columns["建筑物成新率"];
                this.column建筑结构 = base.Columns["建筑结构"];
                this.column建筑面积 = base.Columns["建筑面积"];
                this.column朝向 = base.Columns["朝向"];
                this.column楼型 = base.Columns["楼型"];
                this.column楼梯 = base.Columns["楼梯"];
                this.column电梯 = base.Columns["电梯"];
                this.column物业管理状况 = base.Columns["物业管理状况"];
                this.column装修情况 = base.Columns["装修情况"];
                this.column户型布局 = base.Columns["户型布局"];
                this.column总修正系数 = base.Columns["总修正系数"];
                this.column比准价格元平方米 = base.Columns["比准价格元平方米"];
                this.column交易日期打分 = base.Columns["交易日期打分"];
                this.column交易情况打分 = base.Columns["交易情况打分"];
                this.column商服中心距离打分 = base.Columns["商服中心距离打分"];
                this.column道路通达度打分 = base.Columns["道路通达度打分"];
                this.column供电保证率打分 = base.Columns["供电保证率打分"];
                this.column供水保证率打分 = base.Columns["供水保证率打分"];
                this.column排水状况打分 = base.Columns["排水状况打分"];
                this.column公园距离打分 = base.Columns["公园距离打分"];
                this.column体育场馆距离打分 = base.Columns["体育场馆距离打分"];
                this.column中学距离打分 = base.Columns["中学距离打分"];
                this.column小学距离打分 = base.Columns["小学距离打分"];
                this.column幼儿园距离打分 = base.Columns["幼儿园距离打分"];
                this.column治安状况打分 = base.Columns["治安状况打分"];
                this.column绿化状况打分 = base.Columns["绿化状况打分"];
                this.column大气污染打分 = base.Columns["大气污染打分"];
                this.column噪声污染打分 = base.Columns["噪声污染打分"];
                this.column建筑物成新率打分 = base.Columns["建筑物成新率打分"];
                this.column建筑结构打分 = base.Columns["建筑结构打分"];
                this.column建筑面积打分 = base.Columns["建筑面积打分"];
                this.column朝向打分 = base.Columns["朝向打分"];
                this.column楼型打分 = base.Columns["楼型打分"];
                this.column楼梯打分 = base.Columns["楼梯打分"];
                this.column电梯打分 = base.Columns["电梯打分"];
                this.column物业管理状况打分 = base.Columns["物业管理状况打分"];
                this.column装修情况打分 = base.Columns["装修情况打分"];
                this.column户型布局打分 = base.Columns["户型布局打分"];
                this.column选中项目 = base.Columns["选中项目"];
                this.column标记 = base.Columns["标记"];
                this.column权重 = base.Columns["权重"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnPROJECT_ID = new global::System.Data.DataColumn("PROJECT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_ID);
                this.column比较项目 = new global::System.Data.DataColumn("比较项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column比较项目);
                this.column位置 = new global::System.Data.DataColumn("位置", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column位置);
                this.column房地产用途 = new global::System.Data.DataColumn("房地产用途", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column房地产用途);
                this.column交易日期 = new global::System.Data.DataColumn("交易日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易日期);
                this.column交易情况 = new global::System.Data.DataColumn("交易情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易情况);
                this.column交易价格 = new global::System.Data.DataColumn("交易价格", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易价格);
                this.column商服中心距离 = new global::System.Data.DataColumn("商服中心距离", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商服中心距离);
                this.column道路通达度 = new global::System.Data.DataColumn("道路通达度", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column道路通达度);
                this.column供电保证率 = new global::System.Data.DataColumn("供电保证率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供电保证率);
                this.column供水保证率 = new global::System.Data.DataColumn("供水保证率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供水保证率);
                this.column排水状况 = new global::System.Data.DataColumn("排水状况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column排水状况);
                this.column公园距离 = new global::System.Data.DataColumn("公园距离", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column公园距离);
                this.column体育场馆距离 = new global::System.Data.DataColumn("体育场馆距离", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column体育场馆距离);
                this.column中学距离 = new global::System.Data.DataColumn("中学距离", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column中学距离);
                this.column小学距离 = new global::System.Data.DataColumn("小学距离", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column小学距离);
                this.column幼儿园距离 = new global::System.Data.DataColumn("幼儿园距离", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column幼儿园距离);
                this.column治安状况 = new global::System.Data.DataColumn("治安状况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column治安状况);
                this.column绿化状况 = new global::System.Data.DataColumn("绿化状况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column绿化状况);
                this.column大气污染 = new global::System.Data.DataColumn("大气污染", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大气污染);
                this.column噪声污染 = new global::System.Data.DataColumn("噪声污染", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column噪声污染);
                this.column建筑物成新率 = new global::System.Data.DataColumn("建筑物成新率", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建筑物成新率);
                this.column建筑结构 = new global::System.Data.DataColumn("建筑结构", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建筑结构);
                this.column建筑面积 = new global::System.Data.DataColumn("建筑面积", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建筑面积);
                this.column朝向 = new global::System.Data.DataColumn("朝向", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column朝向);
                this.column楼型 = new global::System.Data.DataColumn("楼型", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column楼型);
                this.column楼梯 = new global::System.Data.DataColumn("楼梯", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column楼梯);
                this.column电梯 = new global::System.Data.DataColumn("电梯", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电梯);
                this.column物业管理状况 = new global::System.Data.DataColumn("物业管理状况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物业管理状况);
                this.column装修情况 = new global::System.Data.DataColumn("装修情况", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column装修情况);
                this.column户型布局 = new global::System.Data.DataColumn("户型布局", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column户型布局);
                this.column总修正系数 = new global::System.Data.DataColumn("总修正系数", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column总修正系数);
                this.column比准价格元平方米 = new global::System.Data.DataColumn("比准价格元平方米", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column比准价格元平方米);
                this.column交易日期打分 = new global::System.Data.DataColumn("交易日期打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易日期打分);
                this.column交易情况打分 = new global::System.Data.DataColumn("交易情况打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column交易情况打分);
                this.column商服中心距离打分 = new global::System.Data.DataColumn("商服中心距离打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column商服中心距离打分);
                this.column道路通达度打分 = new global::System.Data.DataColumn("道路通达度打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column道路通达度打分);
                this.column供电保证率打分 = new global::System.Data.DataColumn("供电保证率打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供电保证率打分);
                this.column供水保证率打分 = new global::System.Data.DataColumn("供水保证率打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column供水保证率打分);
                this.column排水状况打分 = new global::System.Data.DataColumn("排水状况打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column排水状况打分);
                this.column公园距离打分 = new global::System.Data.DataColumn("公园距离打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column公园距离打分);
                this.column体育场馆距离打分 = new global::System.Data.DataColumn("体育场馆距离打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column体育场馆距离打分);
                this.column中学距离打分 = new global::System.Data.DataColumn("中学距离打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column中学距离打分);
                this.column小学距离打分 = new global::System.Data.DataColumn("小学距离打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column小学距离打分);
                this.column幼儿园距离打分 = new global::System.Data.DataColumn("幼儿园距离打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column幼儿园距离打分);
                this.column治安状况打分 = new global::System.Data.DataColumn("治安状况打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column治安状况打分);
                this.column绿化状况打分 = new global::System.Data.DataColumn("绿化状况打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column绿化状况打分);
                this.column大气污染打分 = new global::System.Data.DataColumn("大气污染打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column大气污染打分);
                this.column噪声污染打分 = new global::System.Data.DataColumn("噪声污染打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column噪声污染打分);
                this.column建筑物成新率打分 = new global::System.Data.DataColumn("建筑物成新率打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建筑物成新率打分);
                this.column建筑结构打分 = new global::System.Data.DataColumn("建筑结构打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建筑结构打分);
                this.column建筑面积打分 = new global::System.Data.DataColumn("建筑面积打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column建筑面积打分);
                this.column朝向打分 = new global::System.Data.DataColumn("朝向打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column朝向打分);
                this.column楼型打分 = new global::System.Data.DataColumn("楼型打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column楼型打分);
                this.column楼梯打分 = new global::System.Data.DataColumn("楼梯打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column楼梯打分);
                this.column电梯打分 = new global::System.Data.DataColumn("电梯打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column电梯打分);
                this.column物业管理状况打分 = new global::System.Data.DataColumn("物业管理状况打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column物业管理状况打分);
                this.column装修情况打分 = new global::System.Data.DataColumn("装修情况打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column装修情况打分);
                this.column户型布局打分 = new global::System.Data.DataColumn("户型布局打分", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column户型布局打分);
                this.column选中项目 = new global::System.Data.DataColumn("选中项目", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column选中项目);
                this.column标记 = new global::System.Data.DataColumn("标记", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column标记);
                this.column权重 = new global::System.Data.DataColumn("权重", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column权重);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnPROJECT_ID.AllowDBNull = false;
                this.columnPROJECT_ID.MaxLength = 100;
                this.column比较项目.MaxLength = 100;
                this.column位置.MaxLength = 200;
                this.column房地产用途.MaxLength = 200;
                this.column交易情况.MaxLength = 200;
                this.column商服中心距离.MaxLength = 200;
                this.column道路通达度.MaxLength = 200;
                this.column供电保证率.MaxLength = 200;
                this.column供水保证率.MaxLength = 200;
                this.column排水状况.MaxLength = 200;
                this.column公园距离.MaxLength = 200;
                this.column体育场馆距离.MaxLength = 200;
                this.column中学距离.MaxLength = 200;
                this.column小学距离.MaxLength = 200;
                this.column幼儿园距离.MaxLength = 200;
                this.column治安状况.MaxLength = 200;
                this.column绿化状况.MaxLength = 200;
                this.column大气污染.MaxLength = 200;
                this.column噪声污染.MaxLength = 200;
                this.column建筑物成新率.MaxLength = 200;
                this.column建筑结构.MaxLength = 200;
                this.column建筑面积.MaxLength = 200;
                this.column朝向.MaxLength = 200;
                this.column楼型.MaxLength = 200;
                this.column楼梯.MaxLength = 200;
                this.column电梯.MaxLength = 200;
                this.column物业管理状况.MaxLength = 200;
                this.column装修情况.MaxLength = 200;
                this.column户型布局.MaxLength = 200;
                this.column标记.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachRow NewFM_FCMarketComporisonApproachRow() {
                return ((FM_FCMarketComporisonApproachRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FM_FCMarketComporisonApproachRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FM_FCMarketComporisonApproachRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FM_FCMarketComporisonApproachRowChanged != null)) {
                    this.FM_FCMarketComporisonApproachRowChanged(this, new FM_FCMarketComporisonApproachRowChangeEvent(((FM_FCMarketComporisonApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FM_FCMarketComporisonApproachRowChanging != null)) {
                    this.FM_FCMarketComporisonApproachRowChanging(this, new FM_FCMarketComporisonApproachRowChangeEvent(((FM_FCMarketComporisonApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FM_FCMarketComporisonApproachRowDeleted != null)) {
                    this.FM_FCMarketComporisonApproachRowDeleted(this, new FM_FCMarketComporisonApproachRowChangeEvent(((FM_FCMarketComporisonApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FM_FCMarketComporisonApproachRowDeleting != null)) {
                    this.FM_FCMarketComporisonApproachRowDeleting(this, new FM_FCMarketComporisonApproachRowChangeEvent(((FM_FCMarketComporisonApproachRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFM_FCMarketComporisonApproachRow(FM_FCMarketComporisonApproachRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MarketDataSet ds = new MarketDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FM_FCMarketComporisonApproachDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FM_MARKETHIDECOLUMNRow : global::System.Data.DataRow {
            
            private FM_MARKETHIDECOLUMNDataTable tableFM_MARKETHIDECOLUMN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FM_MARKETHIDECOLUMNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFM_MARKETHIDECOLUMN = ((FM_MARKETHIDECOLUMNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableFM_MARKETHIDECOLUMN.IDColumn]));
                }
                set {
                    this[this.tableFM_MARKETHIDECOLUMN.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PROJECT_ID {
                get {
                    try {
                        return ((string)(this[this.tableFM_MARKETHIDECOLUMN.PROJECT_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROJECT_ID\' in table \'FM_MARKETHIDECOLUMN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_MARKETHIDECOLUMN.PROJECT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HideColumn {
                get {
                    try {
                        return ((string)(this[this.tableFM_MARKETHIDECOLUMN.HideColumnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HideColumn\' in table \'FM_MARKETHIDECOLUMN\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_MARKETHIDECOLUMN.HideColumnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPROJECT_IDNull() {
                return this.IsNull(this.tableFM_MARKETHIDECOLUMN.PROJECT_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPROJECT_IDNull() {
                this[this.tableFM_MARKETHIDECOLUMN.PROJECT_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHideColumnNull() {
                return this.IsNull(this.tableFM_MARKETHIDECOLUMN.HideColumnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHideColumnNull() {
                this[this.tableFM_MARKETHIDECOLUMN.HideColumnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FM_FCMarketComporisonApproachRow : global::System.Data.DataRow {
            
            private FM_FCMarketComporisonApproachDataTable tableFM_FCMarketComporisonApproach;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FM_FCMarketComporisonApproachRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFM_FCMarketComporisonApproach = ((FM_FCMarketComporisonApproachDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.Guid ID {
                get {
                    return ((global::System.Guid)(this[this.tableFM_FCMarketComporisonApproach.IDColumn]));
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PROJECT_ID {
                get {
                    return ((string)(this[this.tableFM_FCMarketComporisonApproach.PROJECT_IDColumn]));
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.PROJECT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 比较项目 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.比较项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'比较项目\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.比较项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 位置 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.位置Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'位置\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.位置Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 房地产用途 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.房地产用途Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'房地产用途\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.房地产用途Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime 交易日期 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFM_FCMarketComporisonApproach.交易日期Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'交易日期\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.交易日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 交易情况 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.交易情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'交易情况\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.交易情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 交易价格 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.交易价格Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'交易价格\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.交易价格Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 商服中心距离 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.商服中心距离Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'商服中心距离\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.商服中心距离Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 道路通达度 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.道路通达度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'道路通达度\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.道路通达度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 供电保证率 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.供电保证率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'供电保证率\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.供电保证率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 供水保证率 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.供水保证率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'供水保证率\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.供水保证率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 排水状况 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.排水状况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'排水状况\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.排水状况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 公园距离 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.公园距离Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'公园距离\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.公园距离Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 体育场馆距离 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.体育场馆距离Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'体育场馆距离\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.体育场馆距离Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 中学距离 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.中学距离Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'中学距离\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.中学距离Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 小学距离 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.小学距离Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'小学距离\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.小学距离Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 幼儿园距离 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.幼儿园距离Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'幼儿园距离\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.幼儿园距离Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 治安状况 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.治安状况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'治安状况\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.治安状况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 绿化状况 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.绿化状况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'绿化状况\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.绿化状况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 大气污染 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.大气污染Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'大气污染\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.大气污染Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 噪声污染 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.噪声污染Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'噪声污染\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.噪声污染Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 建筑物成新率 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.建筑物成新率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'建筑物成新率\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.建筑物成新率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 建筑结构 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.建筑结构Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'建筑结构\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.建筑结构Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 建筑面积 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.建筑面积Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'建筑面积\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.建筑面积Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 朝向 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.朝向Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'朝向\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.朝向Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 楼型 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.楼型Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'楼型\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.楼型Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 楼梯 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.楼梯Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'楼梯\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.楼梯Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 电梯 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.电梯Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'电梯\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.电梯Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 物业管理状况 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.物业管理状况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'物业管理状况\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.物业管理状况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 装修情况 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.装修情况Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'装修情况\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.装修情况Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string 户型布局 {
                get {
                    try {
                        return ((string)(this[this.tableFM_FCMarketComporisonApproach.户型布局Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'户型布局\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.户型布局Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 总修正系数 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.总修正系数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'总修正系数\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.总修正系数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 比准价格元平方米 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.比准价格元平方米Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'比准价格元平方米\' in table \'FM_FCMarketComporisonApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.比准价格元平方米Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 交易日期打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.交易日期打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'交易日期打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.交易日期打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 交易情况打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.交易情况打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'交易情况打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.交易情况打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 商服中心距离打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.商服中心距离打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'商服中心距离打分\' in table \'FM_FCMarketComporisonApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.商服中心距离打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 道路通达度打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.道路通达度打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'道路通达度打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.道路通达度打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 供电保证率打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.供电保证率打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'供电保证率打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.供电保证率打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 供水保证率打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.供水保证率打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'供水保证率打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.供水保证率打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 排水状况打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.排水状况打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'排水状况打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.排水状况打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 公园距离打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.公园距离打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'公园距离打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.公园距离打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 体育场馆距离打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.体育场馆距离打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'体育场馆距离打分\' in table \'FM_FCMarketComporisonApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.体育场馆距离打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 中学距离打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.中学距离打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'中学距离打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.中学距离打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 小学距离打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.小学距离打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'小学距离打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.小学距离打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 幼儿园距离打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.幼儿园距离打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'幼儿园距离打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.幼儿园距离打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 治安状况打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.治安状况打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'治安状况打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.治安状况打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 绿化状况打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.绿化状况打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'绿化状况打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.绿化状况打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 大气污染打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.大气污染打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'大气污染打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.大气污染打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 噪声污染打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.噪声污染打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'噪声污染打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.噪声污染打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 建筑物成新率打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.建筑物成新率打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'建筑物成新率打分\' in table \'FM_FCMarketComporisonApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.建筑物成新率打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 建筑结构打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.建筑结构打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'建筑结构打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.建筑结构打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 建筑面积打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.建筑面积打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'建筑面积打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.建筑面积打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 朝向打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.朝向打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'朝向打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.朝向打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 楼型打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.楼型打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'楼型打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.楼型打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 楼梯打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.楼梯打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'楼梯打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.楼梯打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 电梯打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.电梯打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'电梯打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.电梯打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 物业管理状况打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.物业管理状况打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'物业管理状况打分\' in table \'FM_FCMarketComporisonApproach\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.物业管理状况打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 装修情况打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.装修情况打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'装修情况打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.装修情况打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 户型布局打分 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.户型布局打分Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'户型布局打分\' in table \'FM_FCMarketComporisonApproach\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.户型布局打分Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool 选中项目 {
                get {
                    try {
                        return ((bool)(this[this.tableFM_FCMarketComporisonApproach.选中项目Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'选中项目\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.选中项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] 标记 {
                get {
                    try {
                        return ((byte[])(this[this.tableFM_FCMarketComporisonApproach.标记Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'标记\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.标记Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double 权重 {
                get {
                    try {
                        return ((double)(this[this.tableFM_FCMarketComporisonApproach.权重Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'权重\' in table \'FM_FCMarketComporisonApproach\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFM_FCMarketComporisonApproach.权重Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is比较项目Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.比较项目Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set比较项目Null() {
                this[this.tableFM_FCMarketComporisonApproach.比较项目Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is位置Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.位置Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set位置Null() {
                this[this.tableFM_FCMarketComporisonApproach.位置Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is房地产用途Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.房地产用途Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set房地产用途Null() {
                this[this.tableFM_FCMarketComporisonApproach.房地产用途Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is交易日期Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.交易日期Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set交易日期Null() {
                this[this.tableFM_FCMarketComporisonApproach.交易日期Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is交易情况Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.交易情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set交易情况Null() {
                this[this.tableFM_FCMarketComporisonApproach.交易情况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is交易价格Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.交易价格Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set交易价格Null() {
                this[this.tableFM_FCMarketComporisonApproach.交易价格Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商服中心距离Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.商服中心距离Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商服中心距离Null() {
                this[this.tableFM_FCMarketComporisonApproach.商服中心距离Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is道路通达度Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.道路通达度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set道路通达度Null() {
                this[this.tableFM_FCMarketComporisonApproach.道路通达度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is供电保证率Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.供电保证率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set供电保证率Null() {
                this[this.tableFM_FCMarketComporisonApproach.供电保证率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is供水保证率Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.供水保证率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set供水保证率Null() {
                this[this.tableFM_FCMarketComporisonApproach.供水保证率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is排水状况Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.排水状况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set排水状况Null() {
                this[this.tableFM_FCMarketComporisonApproach.排水状况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is公园距离Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.公园距离Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set公园距离Null() {
                this[this.tableFM_FCMarketComporisonApproach.公园距离Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is体育场馆距离Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.体育场馆距离Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set体育场馆距离Null() {
                this[this.tableFM_FCMarketComporisonApproach.体育场馆距离Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is中学距离Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.中学距离Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set中学距离Null() {
                this[this.tableFM_FCMarketComporisonApproach.中学距离Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is小学距离Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.小学距离Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set小学距离Null() {
                this[this.tableFM_FCMarketComporisonApproach.小学距离Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is幼儿园距离Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.幼儿园距离Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set幼儿园距离Null() {
                this[this.tableFM_FCMarketComporisonApproach.幼儿园距离Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is治安状况Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.治安状况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set治安状况Null() {
                this[this.tableFM_FCMarketComporisonApproach.治安状况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is绿化状况Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.绿化状况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set绿化状况Null() {
                this[this.tableFM_FCMarketComporisonApproach.绿化状况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is大气污染Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.大气污染Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set大气污染Null() {
                this[this.tableFM_FCMarketComporisonApproach.大气污染Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is噪声污染Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.噪声污染Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set噪声污染Null() {
                this[this.tableFM_FCMarketComporisonApproach.噪声污染Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is建筑物成新率Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.建筑物成新率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set建筑物成新率Null() {
                this[this.tableFM_FCMarketComporisonApproach.建筑物成新率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is建筑结构Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.建筑结构Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set建筑结构Null() {
                this[this.tableFM_FCMarketComporisonApproach.建筑结构Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is建筑面积Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.建筑面积Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set建筑面积Null() {
                this[this.tableFM_FCMarketComporisonApproach.建筑面积Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is朝向Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.朝向Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set朝向Null() {
                this[this.tableFM_FCMarketComporisonApproach.朝向Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is楼型Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.楼型Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set楼型Null() {
                this[this.tableFM_FCMarketComporisonApproach.楼型Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is楼梯Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.楼梯Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set楼梯Null() {
                this[this.tableFM_FCMarketComporisonApproach.楼梯Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电梯Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.电梯Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电梯Null() {
                this[this.tableFM_FCMarketComporisonApproach.电梯Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is物业管理状况Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.物业管理状况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set物业管理状况Null() {
                this[this.tableFM_FCMarketComporisonApproach.物业管理状况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is装修情况Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.装修情况Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set装修情况Null() {
                this[this.tableFM_FCMarketComporisonApproach.装修情况Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is户型布局Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.户型布局Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set户型布局Null() {
                this[this.tableFM_FCMarketComporisonApproach.户型布局Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is总修正系数Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.总修正系数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set总修正系数Null() {
                this[this.tableFM_FCMarketComporisonApproach.总修正系数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is比准价格元平方米Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.比准价格元平方米Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set比准价格元平方米Null() {
                this[this.tableFM_FCMarketComporisonApproach.比准价格元平方米Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is交易日期打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.交易日期打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set交易日期打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.交易日期打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is交易情况打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.交易情况打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set交易情况打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.交易情况打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is商服中心距离打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.商服中心距离打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set商服中心距离打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.商服中心距离打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is道路通达度打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.道路通达度打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set道路通达度打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.道路通达度打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is供电保证率打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.供电保证率打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set供电保证率打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.供电保证率打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is供水保证率打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.供水保证率打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set供水保证率打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.供水保证率打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is排水状况打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.排水状况打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set排水状况打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.排水状况打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is公园距离打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.公园距离打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set公园距离打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.公园距离打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is体育场馆距离打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.体育场馆距离打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set体育场馆距离打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.体育场馆距离打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is中学距离打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.中学距离打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set中学距离打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.中学距离打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is小学距离打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.小学距离打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set小学距离打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.小学距离打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is幼儿园距离打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.幼儿园距离打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set幼儿园距离打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.幼儿园距离打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is治安状况打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.治安状况打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set治安状况打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.治安状况打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is绿化状况打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.绿化状况打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set绿化状况打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.绿化状况打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is大气污染打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.大气污染打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set大气污染打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.大气污染打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is噪声污染打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.噪声污染打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set噪声污染打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.噪声污染打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is建筑物成新率打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.建筑物成新率打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set建筑物成新率打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.建筑物成新率打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is建筑结构打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.建筑结构打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set建筑结构打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.建筑结构打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is建筑面积打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.建筑面积打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set建筑面积打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.建筑面积打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is朝向打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.朝向打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set朝向打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.朝向打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is楼型打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.楼型打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set楼型打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.楼型打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is楼梯打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.楼梯打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set楼梯打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.楼梯打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is电梯打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.电梯打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set电梯打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.电梯打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is物业管理状况打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.物业管理状况打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set物业管理状况打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.物业管理状况打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is装修情况打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.装修情况打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set装修情况打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.装修情况打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is户型布局打分Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.户型布局打分Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set户型布局打分Null() {
                this[this.tableFM_FCMarketComporisonApproach.户型布局打分Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is选中项目Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.选中项目Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set选中项目Null() {
                this[this.tableFM_FCMarketComporisonApproach.选中项目Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is标记Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.标记Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set标记Null() {
                this[this.tableFM_FCMarketComporisonApproach.标记Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is权重Null() {
                return this.IsNull(this.tableFM_FCMarketComporisonApproach.权重Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Set权重Null() {
                this[this.tableFM_FCMarketComporisonApproach.权重Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FM_MARKETHIDECOLUMNRowChangeEvent : global::System.EventArgs {
            
            private FM_MARKETHIDECOLUMNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNRowChangeEvent(FM_MARKETHIDECOLUMNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_MARKETHIDECOLUMNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FM_FCMarketComporisonApproachRowChangeEvent : global::System.EventArgs {
            
            private FM_FCMarketComporisonApproachRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachRowChangeEvent(FM_FCMarketComporisonApproachRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FM_FCMarketComporisonApproachRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace AppraiseMethod.MarketDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FM_MARKETHIDECOLUMNTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FM_MARKETHIDECOLUMNTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FM_MARKETHIDECOLUMN";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PROJECT_ID", "PROJECT_ID");
            tableMapping.ColumnMappings.Add("HideColumn", "HideColumn");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [FM_MARKETHIDECOLUMN] WHERE (([ID] = @Original_ID) AND ((@IsNull_PROJECT_ID = 1 AND [PROJECT_ID] IS NULL) OR ([PROJECT_ID] = @Original_PROJECT_ID)) AND ((@IsNull_HideColumn = 1 AND [HideColumn] IS NULL) OR ([HideColumn] = @Original_HideColumn)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PROJECT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HideColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HideColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [FM_MARKETHIDECOLUMN] ([ID], [PROJECT_ID], [HideColumn]) VALUES (@ID," +
                " @PROJECT_ID, @HideColumn);\r\nSELECT ID, PROJECT_ID, HideColumn FROM FM_MARKETHID" +
                "ECOLUMN WHERE (ID = @ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [FM_MARKETHIDECOLUMN] SET [ID] = @ID, [PROJECT_ID] = @PROJECT_ID, [HideColumn] = @HideColumn WHERE (([ID] = @Original_ID) AND ((@IsNull_PROJECT_ID = 1 AND [PROJECT_ID] IS NULL) OR ([PROJECT_ID] = @Original_PROJECT_ID)) AND ((@IsNull_HideColumn = 1 AND [HideColumn] IS NULL) OR ([HideColumn] = @Original_HideColumn)));
SELECT ID, PROJECT_ID, HideColumn FROM FM_MARKETHIDECOLUMN WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HideColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideColumn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PROJECT_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HideColumn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideColumn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HideColumn", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HideColumn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AppraiseMethod.Properties.Settings.Default.gujiaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, PROJECT_ID, HideColumn\r\nFROM FM_MARKETHIDECOLUMN\r\nWHERE (PROJECT_ID = " +
                "@project_id)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@project_id", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MarketDataSet.FM_MARKETHIDECOLUMNDataTable dataTable, string project_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((project_id == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(project_id));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MarketDataSet.FM_MARKETHIDECOLUMNDataTable GetData(string project_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((project_id == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(project_id));
            }
            MarketDataSet.FM_MARKETHIDECOLUMNDataTable dataTable = new MarketDataSet.FM_MARKETHIDECOLUMNDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MarketDataSet.FM_MARKETHIDECOLUMNDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MarketDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FM_MARKETHIDECOLUMN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_ID, string Original_PROJECT_ID, string Original_HideColumn) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ID));
            if ((Original_PROJECT_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PROJECT_ID));
            }
            if ((Original_HideColumn == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_HideColumn));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.Guid ID, string PROJECT_ID, string HideColumn) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((PROJECT_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PROJECT_ID));
            }
            if ((HideColumn == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(HideColumn));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.Guid ID, string PROJECT_ID, string HideColumn, System.Guid Original_ID, string Original_PROJECT_ID, string Original_HideColumn) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((PROJECT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PROJECT_ID));
            }
            if ((HideColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(HideColumn));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.Guid)(Original_ID));
            if ((Original_PROJECT_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_PROJECT_ID));
            }
            if ((Original_HideColumn == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_HideColumn));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PROJECT_ID, string HideColumn, System.Guid Original_ID, string Original_PROJECT_ID, string Original_HideColumn) {
            return this.Update(Original_ID, PROJECT_ID, HideColumn, Original_ID, Original_PROJECT_ID, Original_HideColumn);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FM_FCMarketComporisonApproachTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FM_FCMarketComporisonApproachTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FM_FCMarketComporisonApproach";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("PROJECT_ID", "PROJECT_ID");
            tableMapping.ColumnMappings.Add("比较项目", "比较项目");
            tableMapping.ColumnMappings.Add("位置", "位置");
            tableMapping.ColumnMappings.Add("房地产用途", "房地产用途");
            tableMapping.ColumnMappings.Add("交易日期", "交易日期");
            tableMapping.ColumnMappings.Add("交易情况", "交易情况");
            tableMapping.ColumnMappings.Add("交易价格", "交易价格");
            tableMapping.ColumnMappings.Add("商服中心距离", "商服中心距离");
            tableMapping.ColumnMappings.Add("道路通达度", "道路通达度");
            tableMapping.ColumnMappings.Add("供电保证率", "供电保证率");
            tableMapping.ColumnMappings.Add("供水保证率", "供水保证率");
            tableMapping.ColumnMappings.Add("排水状况", "排水状况");
            tableMapping.ColumnMappings.Add("公园距离", "公园距离");
            tableMapping.ColumnMappings.Add("体育场馆距离", "体育场馆距离");
            tableMapping.ColumnMappings.Add("中学距离", "中学距离");
            tableMapping.ColumnMappings.Add("小学距离", "小学距离");
            tableMapping.ColumnMappings.Add("幼儿园距离", "幼儿园距离");
            tableMapping.ColumnMappings.Add("治安状况", "治安状况");
            tableMapping.ColumnMappings.Add("绿化状况", "绿化状况");
            tableMapping.ColumnMappings.Add("大气污染", "大气污染");
            tableMapping.ColumnMappings.Add("噪声污染", "噪声污染");
            tableMapping.ColumnMappings.Add("建筑物成新率", "建筑物成新率");
            tableMapping.ColumnMappings.Add("建筑结构", "建筑结构");
            tableMapping.ColumnMappings.Add("建筑面积", "建筑面积");
            tableMapping.ColumnMappings.Add("朝向", "朝向");
            tableMapping.ColumnMappings.Add("楼型", "楼型");
            tableMapping.ColumnMappings.Add("楼梯", "楼梯");
            tableMapping.ColumnMappings.Add("电梯", "电梯");
            tableMapping.ColumnMappings.Add("物业管理状况", "物业管理状况");
            tableMapping.ColumnMappings.Add("装修情况", "装修情况");
            tableMapping.ColumnMappings.Add("户型布局", "户型布局");
            tableMapping.ColumnMappings.Add("总修正系数", "总修正系数");
            tableMapping.ColumnMappings.Add("比准价格元平方米", "比准价格元平方米");
            tableMapping.ColumnMappings.Add("交易日期打分", "交易日期打分");
            tableMapping.ColumnMappings.Add("交易情况打分", "交易情况打分");
            tableMapping.ColumnMappings.Add("商服中心距离打分", "商服中心距离打分");
            tableMapping.ColumnMappings.Add("道路通达度打分", "道路通达度打分");
            tableMapping.ColumnMappings.Add("供电保证率打分", "供电保证率打分");
            tableMapping.ColumnMappings.Add("供水保证率打分", "供水保证率打分");
            tableMapping.ColumnMappings.Add("排水状况打分", "排水状况打分");
            tableMapping.ColumnMappings.Add("公园距离打分", "公园距离打分");
            tableMapping.ColumnMappings.Add("体育场馆距离打分", "体育场馆距离打分");
            tableMapping.ColumnMappings.Add("中学距离打分", "中学距离打分");
            tableMapping.ColumnMappings.Add("小学距离打分", "小学距离打分");
            tableMapping.ColumnMappings.Add("幼儿园距离打分", "幼儿园距离打分");
            tableMapping.ColumnMappings.Add("治安状况打分", "治安状况打分");
            tableMapping.ColumnMappings.Add("绿化状况打分", "绿化状况打分");
            tableMapping.ColumnMappings.Add("大气污染打分", "大气污染打分");
            tableMapping.ColumnMappings.Add("噪声污染打分", "噪声污染打分");
            tableMapping.ColumnMappings.Add("建筑物成新率打分", "建筑物成新率打分");
            tableMapping.ColumnMappings.Add("建筑结构打分", "建筑结构打分");
            tableMapping.ColumnMappings.Add("建筑面积打分", "建筑面积打分");
            tableMapping.ColumnMappings.Add("朝向打分", "朝向打分");
            tableMapping.ColumnMappings.Add("楼型打分", "楼型打分");
            tableMapping.ColumnMappings.Add("楼梯打分", "楼梯打分");
            tableMapping.ColumnMappings.Add("电梯打分", "电梯打分");
            tableMapping.ColumnMappings.Add("物业管理状况打分", "物业管理状况打分");
            tableMapping.ColumnMappings.Add("装修情况打分", "装修情况打分");
            tableMapping.ColumnMappings.Add("户型布局打分", "户型布局打分");
            tableMapping.ColumnMappings.Add("选中项目", "选中项目");
            tableMapping.ColumnMappings.Add("标记", "标记");
            tableMapping.ColumnMappings.Add("权重", "权重");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FM_FCMarketComporisonApproach] WHERE (([ID] = @Original_ID) AN" +
                "D ((@IsNull_标记 = 1 AND [标记] IS NULL) OR ([标记] = @Original_标记)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_标记", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "标记", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_标记", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "标记", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[FM_FCMarketComporisonApproach] ([ID], [PROJECT_ID], [比较项目], [位" +
                "置], [房地产用途], [交易日期], [交易情况], [交易价格], [商服中心距离], [道路通达度], [供电保证率], [供水保证率], [排水状况]" +
                ", [公园距离], [体育场馆距离], [中学距离], [小学距离], [幼儿园距离], [治安状况], [绿化状况], [大气污染], [噪声污染], [建筑" +
                "物成新率], [建筑结构], [建筑面积], [朝向], [楼型], [楼梯], [电梯], [物业管理状况], [装修情况], [户型布局], [总修正系数]" +
                ", [比准价格元平方米], [交易日期打分], [交易情况打分], [商服中心距离打分], [道路通达度打分], [供电保证率打分], [供水保证率打分], [" +
                "排水状况打分], [公园距离打分], [体育场馆距离打分], [中学距离打分], [小学距离打分], [幼儿园距离打分], [治安状况打分], [绿化状况打分]" +
                ", [大气污染打分], [噪声污染打分], [建筑物成新率打分], [建筑结构打分], [建筑面积打分], [朝向打分], [楼型打分], [楼梯打分], [电" +
                "梯打分], [物业管理状况打分], [装修情况打分], [户型布局打分], [选中项目], [权重]) VALUES (@ID, @PROJECT_ID, @比" +
                "较项目, @位置, @房地产用途, @交易日期, @交易情况, @交易价格, @商服中心距离, @道路通达度, @供电保证率, @供水保证率, @排水状况, @" +
                "公园距离, @体育场馆距离, @中学距离, @小学距离, @幼儿园距离, @治安状况, @绿化状况, @大气污染, @噪声污染, @建筑物成新率, @建筑结构," +
                " @建筑面积, @朝向, @楼型, @楼梯, @电梯, @物业管理状况, @装修情况, @户型布局, @总修正系数, @比准价格元平方米, @交易日期打分, @" +
                "交易情况打分, @商服中心距离打分, @道路通达度打分, @供电保证率打分, @供水保证率打分, @排水状况打分, @公园距离打分, @体育场馆距离打分, @中" +
                "学距离打分, @小学距离打分, @幼儿园距离打分, @治安状况打分, @绿化状况打分, @大气污染打分, @噪声污染打分, @建筑物成新率打分, @建筑结构打分" +
                ", @建筑面积打分, @朝向打分, @楼型打分, @楼梯打分, @电梯打分, @物业管理状况打分, @装修情况打分, @户型布局打分, @选中项目, @权重);" +
                "\r\nSELECT ID, PROJECT_ID, 比较项目, 位置, 房地产用途, 交易日期, 交易情况, 交易价格, 商服中心距离, 道路通达度, 供电保证率" +
                ", 供水保证率, 排水状况, 公园距离, 体育场馆距离, 中学距离, 小学距离, 幼儿园距离, 治安状况, 绿化状况, 大气污染, 噪声污染, 建筑物成新率, " +
                "建筑结构, 建筑面积, 朝向, 楼型, 楼梯, 电梯, 物业管理状况, 装修情况, 户型布局, 总修正系数, 比准价格元平方米, 交易日期打分, 交易情况打分," +
                " 商服中心距离打分, 道路通达度打分, 供电保证率打分, 供水保证率打分, 排水状况打分, 公园距离打分, 体育场馆距离打分, 中学距离打分, 小学距离打分, " +
                "幼儿园距离打分, 治安状况打分, 绿化状况打分, 大气污染打分, 噪声污染打分, 建筑物成新率打分, 建筑结构打分, 建筑面积打分, 朝向打分, 楼型打分, 楼" +
                "梯打分, 电梯打分, 物业管理状况打分, 装修情况打分, 户型布局打分, 选中项目, 标记, 权重 FROM FM_FCMarketComporisonAppr" +
                "oach WHERE (ID = @ID) ORDER BY 标记";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@比较项目", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "比较项目", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@位置", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "位置", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@房地产用途", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "房地产用途", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易日期", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易日期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易情况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易情况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易价格", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易价格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商服中心距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商服中心距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@道路通达度", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "道路通达度", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供电保证率", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供电保证率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供水保证率", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供水保证率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@排水状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "排水状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@公园距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "公园距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@体育场馆距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "体育场馆距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@中学距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "中学距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@小学距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "小学距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@幼儿园距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "幼儿园距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@治安状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "治安状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@绿化状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "绿化状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大气污染", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大气污染", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@噪声污染", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "噪声污染", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑物成新率", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑物成新率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑结构", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑结构", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑面积", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑面积", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@朝向", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "朝向", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼型", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼型", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼梯", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼梯", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@电梯", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "电梯", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@物业管理状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "物业管理状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@装修情况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "装修情况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@户型布局", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "户型布局", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@总修正系数", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "总修正系数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@比准价格元平方米", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "比准价格元平方米", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易日期打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易日期打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易情况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易情况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商服中心距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商服中心距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@道路通达度打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "道路通达度打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供电保证率打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供电保证率打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供水保证率打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供水保证率打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@排水状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "排水状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@公园距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "公园距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@体育场馆距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "体育场馆距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@中学距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "中学距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@小学距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "小学距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@幼儿园距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "幼儿园距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@治安状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "治安状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@绿化状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "绿化状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大气污染打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大气污染打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@噪声污染打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "噪声污染打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑物成新率打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑物成新率打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑结构打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑结构打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑面积打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑面积打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@朝向打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "朝向打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼型打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼型打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼梯打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼梯打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@电梯打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "电梯打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@物业管理状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "物业管理状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@装修情况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "装修情况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@户型布局打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "户型布局打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@选中项目", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "选中项目", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@权重", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "权重", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[FM_FCMarketComporisonApproach] SET [ID] = @ID, [PROJECT_ID] = @PROJ" +
                "ECT_ID, [比较项目] = @比较项目, [位置] = @位置, [房地产用途] = @房地产用途, [交易日期] = @交易日期, [交易情况] = @" +
                "交易情况, [交易价格] = @交易价格, [商服中心距离] = @商服中心距离, [道路通达度] = @道路通达度, [供电保证率] = @供电保证率, [供" +
                "水保证率] = @供水保证率, [排水状况] = @排水状况, [公园距离] = @公园距离, [体育场馆距离] = @体育场馆距离, [中学距离] = @中学" +
                "距离, [小学距离] = @小学距离, [幼儿园距离] = @幼儿园距离, [治安状况] = @治安状况, [绿化状况] = @绿化状况, [大气污染] = @" +
                "大气污染, [噪声污染] = @噪声污染, [建筑物成新率] = @建筑物成新率, [建筑结构] = @建筑结构, [建筑面积] = @建筑面积, [朝向] =" +
                " @朝向, [楼型] = @楼型, [楼梯] = @楼梯, [电梯] = @电梯, [物业管理状况] = @物业管理状况, [装修情况] = @装修情况, [户" +
                "型布局] = @户型布局, [总修正系数] = @总修正系数, [比准价格元平方米] = @比准价格元平方米, [交易日期打分] = @交易日期打分, [交易情" +
                "况打分] = @交易情况打分, [商服中心距离打分] = @商服中心距离打分, [道路通达度打分] = @道路通达度打分, [供电保证率打分] = @供电保证率" +
                "打分, [供水保证率打分] = @供水保证率打分, [排水状况打分] = @排水状况打分, [公园距离打分] = @公园距离打分, [体育场馆距离打分] = @" +
                "体育场馆距离打分, [中学距离打分] = @中学距离打分, [小学距离打分] = @小学距离打分, [幼儿园距离打分] = @幼儿园距离打分, [治安状况打分]" +
                " = @治安状况打分, [绿化状况打分] = @绿化状况打分, [大气污染打分] = @大气污染打分, [噪声污染打分] = @噪声污染打分, [建筑物成新率打" +
                "分] = @建筑物成新率打分, [建筑结构打分] = @建筑结构打分, [建筑面积打分] = @建筑面积打分, [朝向打分] = @朝向打分, [楼型打分] =" +
                " @楼型打分, [楼梯打分] = @楼梯打分, [电梯打分] = @电梯打分, [物业管理状况打分] = @物业管理状况打分, [装修情况打分] = @装修情况" +
                "打分, [户型布局打分] = @户型布局打分, [选中项目] = @选中项目, [权重] = @权重 WHERE (([ID] = @Original_ID) " +
                "AND ((@IsNull_标记 = 1 AND [标记] IS NULL) OR ([标记] = @Original_标记)));\r\nSELECT ID, P" +
                "ROJECT_ID, 比较项目, 位置, 房地产用途, 交易日期, 交易情况, 交易价格, 商服中心距离, 道路通达度, 供电保证率, 供水保证率, 排水状况," +
                " 公园距离, 体育场馆距离, 中学距离, 小学距离, 幼儿园距离, 治安状况, 绿化状况, 大气污染, 噪声污染, 建筑物成新率, 建筑结构, 建筑面积, 朝向" +
                ", 楼型, 楼梯, 电梯, 物业管理状况, 装修情况, 户型布局, 总修正系数, 比准价格元平方米, 交易日期打分, 交易情况打分, 商服中心距离打分, 道路通" +
                "达度打分, 供电保证率打分, 供水保证率打分, 排水状况打分, 公园距离打分, 体育场馆距离打分, 中学距离打分, 小学距离打分, 幼儿园距离打分, 治安状况打" +
                "分, 绿化状况打分, 大气污染打分, 噪声污染打分, 建筑物成新率打分, 建筑结构打分, 建筑面积打分, 朝向打分, 楼型打分, 楼梯打分, 电梯打分, 物业管" +
                "理状况打分, 装修情况打分, 户型布局打分, 选中项目, 标记, 权重 FROM FM_FCMarketComporisonApproach WHERE (ID" +
                " = @ID) ORDER BY 标记";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@比较项目", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "比较项目", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@位置", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "位置", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@房地产用途", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "房地产用途", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易日期", global::System.Data.SqlDbType.SmallDateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易日期", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易情况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易情况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易价格", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易价格", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商服中心距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商服中心距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@道路通达度", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "道路通达度", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供电保证率", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供电保证率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供水保证率", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供水保证率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@排水状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "排水状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@公园距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "公园距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@体育场馆距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "体育场馆距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@中学距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "中学距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@小学距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "小学距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@幼儿园距离", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "幼儿园距离", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@治安状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "治安状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@绿化状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "绿化状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大气污染", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大气污染", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@噪声污染", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "噪声污染", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑物成新率", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑物成新率", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑结构", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑结构", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑面积", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑面积", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@朝向", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "朝向", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼型", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼型", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼梯", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼梯", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@电梯", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "电梯", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@物业管理状况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "物业管理状况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@装修情况", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "装修情况", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@户型布局", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "户型布局", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@总修正系数", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "总修正系数", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@比准价格元平方米", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "比准价格元平方米", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易日期打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易日期打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@交易情况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "交易情况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@商服中心距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "商服中心距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@道路通达度打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "道路通达度打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供电保证率打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供电保证率打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@供水保证率打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "供水保证率打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@排水状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "排水状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@公园距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "公园距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@体育场馆距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "体育场馆距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@中学距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "中学距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@小学距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "小学距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@幼儿园距离打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "幼儿园距离打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@治安状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "治安状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@绿化状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "绿化状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@大气污染打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "大气污染打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@噪声污染打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "噪声污染打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑物成新率打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑物成新率打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑结构打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑结构打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@建筑面积打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "建筑面积打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@朝向打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "朝向打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼型打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼型打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@楼梯打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "楼梯打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@电梯打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "电梯打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@物业管理状况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "物业管理状况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@装修情况打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "装修情况打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@户型布局打分", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "户型布局打分", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@选中项目", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "选中项目", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@权重", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "权重", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.UniqueIdentifier, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_标记", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "标记", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_标记", global::System.Data.SqlDbType.Timestamp, 0, global::System.Data.ParameterDirection.Input, 0, 0, "标记", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::AppraiseMethod.Properties.Settings.Default.gujiaConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ID, PROJECT_ID, 比较项目, 位置, 房地产用途, 交易日期, 交易情况, 交易价格, 商服中心距离, 道路通达度, 供电保证率, 供水保证率, 排水状况, 公园距离, 体育场馆距离, 中学距离, 小学距离, 幼儿园距离, 治安状况, 绿化状况, 大气污染, 噪声污染, 建筑物成新率, 建筑结构, 建筑面积, 朝向, 楼型, 楼梯, 电梯, 物业管理状况, 装修情况, 户型布局, 总修正系数, 比准价格元平方米, 交易日期打分, 交易情况打分, 商服中心距离打分, 道路通达度打分, 供电保证率打分, 供水保证率打分, 排水状况打分, 公园距离打分, 体育场馆距离打分, 中学距离打分, 小学距离打分, 幼儿园距离打分, 治安状况打分, 绿化状况打分, 大气污染打分, 噪声污染打分, 建筑物成新率打分, 建筑结构打分, 建筑面积打分, 朝向打分, 楼型打分, 楼梯打分, 电梯打分, 物业管理状况打分, 装修情况打分, 户型布局打分, 选中项目, 标记, 权重 FROM dbo.FM_FCMarketComporisonApproach where PROJECT_ID = @PROJECT_ID order by 标记";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROJECT_ID", global::System.Data.SqlDbType.NVarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, "PROJECT_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MarketDataSet.FM_FCMarketComporisonApproachDataTable dataTable, string PROJECT_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PROJECT_ID == null)) {
                throw new global::System.ArgumentNullException("PROJECT_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PROJECT_ID));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MarketDataSet.FM_FCMarketComporisonApproachDataTable GetData(string PROJECT_ID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PROJECT_ID == null)) {
                throw new global::System.ArgumentNullException("PROJECT_ID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(PROJECT_ID));
            }
            MarketDataSet.FM_FCMarketComporisonApproachDataTable dataTable = new MarketDataSet.FM_FCMarketComporisonApproachDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MarketDataSet.FM_FCMarketComporisonApproachDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MarketDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FM_FCMarketComporisonApproach");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.Guid Original_ID, byte[] Original_标记) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.Guid)(Original_ID));
            if ((Original_标记 == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((byte[])(Original_标记));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.Guid ID, 
                    string PROJECT_ID, 
                    string 比较项目, 
                    string 位置, 
                    string 房地产用途, 
                    global::System.Nullable<global::System.DateTime> 交易日期, 
                    string 交易情况, 
                    global::System.Nullable<double> 交易价格, 
                    string 商服中心距离, 
                    string 道路通达度, 
                    string 供电保证率, 
                    string 供水保证率, 
                    string 排水状况, 
                    string 公园距离, 
                    string 体育场馆距离, 
                    string 中学距离, 
                    string 小学距离, 
                    string 幼儿园距离, 
                    string 治安状况, 
                    string 绿化状况, 
                    string 大气污染, 
                    string 噪声污染, 
                    string 建筑物成新率, 
                    string 建筑结构, 
                    string 建筑面积, 
                    string 朝向, 
                    string 楼型, 
                    string 楼梯, 
                    string 电梯, 
                    string 物业管理状况, 
                    string 装修情况, 
                    string 户型布局, 
                    global::System.Nullable<double> 总修正系数, 
                    global::System.Nullable<double> 比准价格元平方米, 
                    global::System.Nullable<double> 交易日期打分, 
                    global::System.Nullable<double> 交易情况打分, 
                    global::System.Nullable<double> 商服中心距离打分, 
                    global::System.Nullable<double> 道路通达度打分, 
                    global::System.Nullable<double> 供电保证率打分, 
                    global::System.Nullable<double> 供水保证率打分, 
                    global::System.Nullable<double> 排水状况打分, 
                    global::System.Nullable<double> 公园距离打分, 
                    global::System.Nullable<double> 体育场馆距离打分, 
                    global::System.Nullable<double> 中学距离打分, 
                    global::System.Nullable<double> 小学距离打分, 
                    global::System.Nullable<double> 幼儿园距离打分, 
                    global::System.Nullable<double> 治安状况打分, 
                    global::System.Nullable<double> 绿化状况打分, 
                    global::System.Nullable<double> 大气污染打分, 
                    global::System.Nullable<double> 噪声污染打分, 
                    global::System.Nullable<double> 建筑物成新率打分, 
                    global::System.Nullable<double> 建筑结构打分, 
                    global::System.Nullable<double> 建筑面积打分, 
                    global::System.Nullable<double> 朝向打分, 
                    global::System.Nullable<double> 楼型打分, 
                    global::System.Nullable<double> 楼梯打分, 
                    global::System.Nullable<double> 电梯打分, 
                    global::System.Nullable<double> 物业管理状况打分, 
                    global::System.Nullable<double> 装修情况打分, 
                    global::System.Nullable<double> 户型布局打分, 
                    global::System.Nullable<bool> 选中项目, 
                    global::System.Nullable<double> 权重) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((PROJECT_ID == null)) {
                throw new global::System.ArgumentNullException("PROJECT_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PROJECT_ID));
            }
            if ((比较项目 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(比较项目));
            }
            if ((位置 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(位置));
            }
            if ((房地产用途 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(房地产用途));
            }
            if ((交易日期.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(交易日期.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((交易情况 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(交易情况));
            }
            if ((交易价格.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(交易价格.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((商服中心距离 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(商服中心距离));
            }
            if ((道路通达度 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(道路通达度));
            }
            if ((供电保证率 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(供电保证率));
            }
            if ((供水保证率 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(供水保证率));
            }
            if ((排水状况 == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(排水状况));
            }
            if ((公园距离 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(公园距离));
            }
            if ((体育场馆距离 == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(体育场馆距离));
            }
            if ((中学距离 == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(中学距离));
            }
            if ((小学距离 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(小学距离));
            }
            if ((幼儿园距离 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(幼儿园距离));
            }
            if ((治安状况 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(治安状况));
            }
            if ((绿化状况 == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(绿化状况));
            }
            if ((大气污染 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(大气污染));
            }
            if ((噪声污染 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(噪声污染));
            }
            if ((建筑物成新率 == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(建筑物成新率));
            }
            if ((建筑结构 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(建筑结构));
            }
            if ((建筑面积 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(建筑面积));
            }
            if ((朝向 == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(朝向));
            }
            if ((楼型 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(楼型));
            }
            if ((楼梯 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(楼梯));
            }
            if ((电梯 == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(电梯));
            }
            if ((物业管理状况 == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(物业管理状况));
            }
            if ((装修情况 == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(装修情况));
            }
            if ((户型布局 == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(户型布局));
            }
            if ((总修正系数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(总修正系数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((比准价格元平方米.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(比准价格元平方米.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((交易日期打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(交易日期打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((交易情况打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(交易情况打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((商服中心距离打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(商服中心距离打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((道路通达度打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(道路通达度打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((供电保证率打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(供电保证率打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((供水保证率打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(供水保证率打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((排水状况打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(排水状况打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((公园距离打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(公园距离打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((体育场馆距离打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(体育场馆距离打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((中学距离打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(中学距离打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((小学距离打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(小学距离打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((幼儿园距离打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(幼儿园距离打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((治安状况打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(治安状况打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((绿化状况打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(绿化状况打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((大气污染打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(大气污染打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((噪声污染打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((double)(噪声污染打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((建筑物成新率打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((double)(建筑物成新率打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((建筑结构打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(建筑结构打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((建筑面积打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((double)(建筑面积打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((朝向打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(朝向打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((楼型打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(楼型打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((楼梯打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((double)(楼梯打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((电梯打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((double)(电梯打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((物业管理状况打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((double)(物业管理状况打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((装修情况打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((double)(装修情况打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((户型布局打分.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((double)(户型布局打分.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((选中项目.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(选中项目.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((权重.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((double)(权重.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.Guid ID, 
                    string PROJECT_ID, 
                    string 比较项目, 
                    string 位置, 
                    string 房地产用途, 
                    global::System.Nullable<global::System.DateTime> 交易日期, 
                    string 交易情况, 
                    global::System.Nullable<double> 交易价格, 
                    string 商服中心距离, 
                    string 道路通达度, 
                    string 供电保证率, 
                    string 供水保证率, 
                    string 排水状况, 
                    string 公园距离, 
                    string 体育场馆距离, 
                    string 中学距离, 
                    string 小学距离, 
                    string 幼儿园距离, 
                    string 治安状况, 
                    string 绿化状况, 
                    string 大气污染, 
                    string 噪声污染, 
                    string 建筑物成新率, 
                    string 建筑结构, 
                    string 建筑面积, 
                    string 朝向, 
                    string 楼型, 
                    string 楼梯, 
                    string 电梯, 
                    string 物业管理状况, 
                    string 装修情况, 
                    string 户型布局, 
                    global::System.Nullable<double> 总修正系数, 
                    global::System.Nullable<double> 比准价格元平方米, 
                    global::System.Nullable<double> 交易日期打分, 
                    global::System.Nullable<double> 交易情况打分, 
                    global::System.Nullable<double> 商服中心距离打分, 
                    global::System.Nullable<double> 道路通达度打分, 
                    global::System.Nullable<double> 供电保证率打分, 
                    global::System.Nullable<double> 供水保证率打分, 
                    global::System.Nullable<double> 排水状况打分, 
                    global::System.Nullable<double> 公园距离打分, 
                    global::System.Nullable<double> 体育场馆距离打分, 
                    global::System.Nullable<double> 中学距离打分, 
                    global::System.Nullable<double> 小学距离打分, 
                    global::System.Nullable<double> 幼儿园距离打分, 
                    global::System.Nullable<double> 治安状况打分, 
                    global::System.Nullable<double> 绿化状况打分, 
                    global::System.Nullable<double> 大气污染打分, 
                    global::System.Nullable<double> 噪声污染打分, 
                    global::System.Nullable<double> 建筑物成新率打分, 
                    global::System.Nullable<double> 建筑结构打分, 
                    global::System.Nullable<double> 建筑面积打分, 
                    global::System.Nullable<double> 朝向打分, 
                    global::System.Nullable<double> 楼型打分, 
                    global::System.Nullable<double> 楼梯打分, 
                    global::System.Nullable<double> 电梯打分, 
                    global::System.Nullable<double> 物业管理状况打分, 
                    global::System.Nullable<double> 装修情况打分, 
                    global::System.Nullable<double> 户型布局打分, 
                    global::System.Nullable<bool> 选中项目, 
                    global::System.Nullable<double> 权重, 
                    System.Guid Original_ID, 
                    byte[] Original_标记) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.Guid)(ID));
            if ((PROJECT_ID == null)) {
                throw new global::System.ArgumentNullException("PROJECT_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PROJECT_ID));
            }
            if ((比较项目 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(比较项目));
            }
            if ((位置 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(位置));
            }
            if ((房地产用途 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(房地产用途));
            }
            if ((交易日期.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(交易日期.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((交易情况 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(交易情况));
            }
            if ((交易价格.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(交易价格.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((商服中心距离 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(商服中心距离));
            }
            if ((道路通达度 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(道路通达度));
            }
            if ((供电保证率 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(供电保证率));
            }
            if ((供水保证率 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(供水保证率));
            }
            if ((排水状况 == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(排水状况));
            }
            if ((公园距离 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(公园距离));
            }
            if ((体育场馆距离 == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(体育场馆距离));
            }
            if ((中学距离 == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(中学距离));
            }
            if ((小学距离 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(小学距离));
            }
            if ((幼儿园距离 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(幼儿园距离));
            }
            if ((治安状况 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(治安状况));
            }
            if ((绿化状况 == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(绿化状况));
            }
            if ((大气污染 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(大气污染));
            }
            if ((噪声污染 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(噪声污染));
            }
            if ((建筑物成新率 == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(建筑物成新率));
            }
            if ((建筑结构 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(建筑结构));
            }
            if ((建筑面积 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(建筑面积));
            }
            if ((朝向 == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(朝向));
            }
            if ((楼型 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(楼型));
            }
            if ((楼梯 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(楼梯));
            }
            if ((电梯 == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(电梯));
            }
            if ((物业管理状况 == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(物业管理状况));
            }
            if ((装修情况 == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(装修情况));
            }
            if ((户型布局 == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(户型布局));
            }
            if ((总修正系数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(总修正系数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((比准价格元平方米.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(比准价格元平方米.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((交易日期打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(交易日期打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((交易情况打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(交易情况打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((商服中心距离打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(商服中心距离打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((道路通达度打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(道路通达度打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((供电保证率打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(供电保证率打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((供水保证率打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(供水保证率打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((排水状况打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(排水状况打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((公园距离打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(公园距离打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((体育场馆距离打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(体育场馆距离打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((中学距离打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(中学距离打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((小学距离打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(小学距离打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((幼儿园距离打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(幼儿园距离打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((治安状况打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(治安状况打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((绿化状况打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(绿化状况打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((大气污染打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(大气污染打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((噪声污染打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(噪声污染打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((建筑物成新率打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(建筑物成新率打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((建筑结构打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(建筑结构打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((建筑面积打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(建筑面积打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((朝向打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(朝向打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((楼型打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(楼型打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((楼梯打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(楼梯打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((电梯打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(电梯打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((物业管理状况打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(物业管理状况打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((装修情况打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(装修情况打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((户型布局打分.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(户型布局打分.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((选中项目.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(选中项目.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((权重.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(权重.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[62].Value = ((System.Guid)(Original_ID));
            if ((Original_标记 == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((byte[])(Original_标记));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PROJECT_ID, 
                    string 比较项目, 
                    string 位置, 
                    string 房地产用途, 
                    global::System.Nullable<global::System.DateTime> 交易日期, 
                    string 交易情况, 
                    global::System.Nullable<double> 交易价格, 
                    string 商服中心距离, 
                    string 道路通达度, 
                    string 供电保证率, 
                    string 供水保证率, 
                    string 排水状况, 
                    string 公园距离, 
                    string 体育场馆距离, 
                    string 中学距离, 
                    string 小学距离, 
                    string 幼儿园距离, 
                    string 治安状况, 
                    string 绿化状况, 
                    string 大气污染, 
                    string 噪声污染, 
                    string 建筑物成新率, 
                    string 建筑结构, 
                    string 建筑面积, 
                    string 朝向, 
                    string 楼型, 
                    string 楼梯, 
                    string 电梯, 
                    string 物业管理状况, 
                    string 装修情况, 
                    string 户型布局, 
                    global::System.Nullable<double> 总修正系数, 
                    global::System.Nullable<double> 比准价格元平方米, 
                    global::System.Nullable<double> 交易日期打分, 
                    global::System.Nullable<double> 交易情况打分, 
                    global::System.Nullable<double> 商服中心距离打分, 
                    global::System.Nullable<double> 道路通达度打分, 
                    global::System.Nullable<double> 供电保证率打分, 
                    global::System.Nullable<double> 供水保证率打分, 
                    global::System.Nullable<double> 排水状况打分, 
                    global::System.Nullable<double> 公园距离打分, 
                    global::System.Nullable<double> 体育场馆距离打分, 
                    global::System.Nullable<double> 中学距离打分, 
                    global::System.Nullable<double> 小学距离打分, 
                    global::System.Nullable<double> 幼儿园距离打分, 
                    global::System.Nullable<double> 治安状况打分, 
                    global::System.Nullable<double> 绿化状况打分, 
                    global::System.Nullable<double> 大气污染打分, 
                    global::System.Nullable<double> 噪声污染打分, 
                    global::System.Nullable<double> 建筑物成新率打分, 
                    global::System.Nullable<double> 建筑结构打分, 
                    global::System.Nullable<double> 建筑面积打分, 
                    global::System.Nullable<double> 朝向打分, 
                    global::System.Nullable<double> 楼型打分, 
                    global::System.Nullable<double> 楼梯打分, 
                    global::System.Nullable<double> 电梯打分, 
                    global::System.Nullable<double> 物业管理状况打分, 
                    global::System.Nullable<double> 装修情况打分, 
                    global::System.Nullable<double> 户型布局打分, 
                    global::System.Nullable<bool> 选中项目, 
                    global::System.Nullable<double> 权重, 
                    System.Guid Original_ID, 
                    byte[] Original_标记) {
            return this.Update(Original_ID, PROJECT_ID, 比较项目, 位置, 房地产用途, 交易日期, 交易情况, 交易价格, 商服中心距离, 道路通达度, 供电保证率, 供水保证率, 排水状况, 公园距离, 体育场馆距离, 中学距离, 小学距离, 幼儿园距离, 治安状况, 绿化状况, 大气污染, 噪声污染, 建筑物成新率, 建筑结构, 建筑面积, 朝向, 楼型, 楼梯, 电梯, 物业管理状况, 装修情况, 户型布局, 总修正系数, 比准价格元平方米, 交易日期打分, 交易情况打分, 商服中心距离打分, 道路通达度打分, 供电保证率打分, 供水保证率打分, 排水状况打分, 公园距离打分, 体育场馆距离打分, 中学距离打分, 小学距离打分, 幼儿园距离打分, 治安状况打分, 绿化状况打分, 大气污染打分, 噪声污染打分, 建筑物成新率打分, 建筑结构打分, 建筑面积打分, 朝向打分, 楼型打分, 楼梯打分, 电梯打分, 物业管理状况打分, 装修情况打分, 户型布局打分, 选中项目, 权重, Original_ID, Original_标记);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private FM_MARKETHIDECOLUMNTableAdapter _fM_MARKETHIDECOLUMNTableAdapter;
        
        private FM_FCMarketComporisonApproachTableAdapter _fM_FCMarketComporisonApproachTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FM_MARKETHIDECOLUMNTableAdapter FM_MARKETHIDECOLUMNTableAdapter {
            get {
                return this._fM_MARKETHIDECOLUMNTableAdapter;
            }
            set {
                this._fM_MARKETHIDECOLUMNTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FM_FCMarketComporisonApproachTableAdapter FM_FCMarketComporisonApproachTableAdapter {
            get {
                return this._fM_FCMarketComporisonApproachTableAdapter;
            }
            set {
                this._fM_FCMarketComporisonApproachTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._fM_MARKETHIDECOLUMNTableAdapter != null) 
                            && (this._fM_MARKETHIDECOLUMNTableAdapter.Connection != null))) {
                    return this._fM_MARKETHIDECOLUMNTableAdapter.Connection;
                }
                if (((this._fM_FCMarketComporisonApproachTableAdapter != null) 
                            && (this._fM_FCMarketComporisonApproachTableAdapter.Connection != null))) {
                    return this._fM_FCMarketComporisonApproachTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._fM_MARKETHIDECOLUMNTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fM_FCMarketComporisonApproachTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(MarketDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fM_FCMarketComporisonApproachTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FM_FCMarketComporisonApproach.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fM_FCMarketComporisonApproachTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fM_MARKETHIDECOLUMNTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FM_MARKETHIDECOLUMN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fM_MARKETHIDECOLUMNTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(MarketDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._fM_FCMarketComporisonApproachTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FM_FCMarketComporisonApproach.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fM_FCMarketComporisonApproachTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fM_MARKETHIDECOLUMNTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FM_MARKETHIDECOLUMN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fM_MARKETHIDECOLUMNTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(MarketDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._fM_MARKETHIDECOLUMNTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FM_MARKETHIDECOLUMN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fM_MARKETHIDECOLUMNTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fM_FCMarketComporisonApproachTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FM_FCMarketComporisonApproach.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fM_FCMarketComporisonApproachTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(MarketDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._fM_MARKETHIDECOLUMNTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fM_MARKETHIDECOLUMNTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._fM_FCMarketComporisonApproachTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fM_FCMarketComporisonApproachTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._fM_MARKETHIDECOLUMNTableAdapter != null)) {
                    revertConnections.Add(this._fM_MARKETHIDECOLUMNTableAdapter, this._fM_MARKETHIDECOLUMNTableAdapter.Connection);
                    this._fM_MARKETHIDECOLUMNTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fM_MARKETHIDECOLUMNTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fM_MARKETHIDECOLUMNTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fM_MARKETHIDECOLUMNTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fM_MARKETHIDECOLUMNTableAdapter.Adapter);
                    }
                }
                if ((this._fM_FCMarketComporisonApproachTableAdapter != null)) {
                    revertConnections.Add(this._fM_FCMarketComporisonApproachTableAdapter, this._fM_FCMarketComporisonApproachTableAdapter.Connection);
                    this._fM_FCMarketComporisonApproachTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fM_FCMarketComporisonApproachTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fM_FCMarketComporisonApproachTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fM_FCMarketComporisonApproachTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fM_FCMarketComporisonApproachTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._fM_MARKETHIDECOLUMNTableAdapter != null)) {
                    this._fM_MARKETHIDECOLUMNTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fM_MARKETHIDECOLUMNTableAdapter]));
                    this._fM_MARKETHIDECOLUMNTableAdapter.Transaction = null;
                }
                if ((this._fM_FCMarketComporisonApproachTableAdapter != null)) {
                    this._fM_FCMarketComporisonApproachTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fM_FCMarketComporisonApproachTableAdapter]));
                    this._fM_FCMarketComporisonApproachTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591